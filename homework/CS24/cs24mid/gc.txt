Part A.
A cons-pair can only reference memory cells that are older than it - those that
appear before it in the linked list (can be reached by tracing back on
prev_alloc any number of steps). This is because the cons pair must be made of
two already existing values, so the cons-pair must have been made after the
values were already made.


Part B.
def mark_and_sweep(cells):
    # start with the newest
    current = cells.newest()
    while true:
        # end at the oldest
        if current == NULL:
            return

        # check if marked or root
        if current.marked or is_root(current):
            # check if it cons pair and mark values
            if is_cons(cell):
                set_marked(car(cell), 1)
                set_marked(cdr(cell), 1)
            current = current.prev_alloc
        else:
            # free if not marked or root
            prev = current
            current = current.prev_alloc
            free(prev)


Part C.
Can it be interrupted and resumed:
No, this algorithm cannot handle being stopped and then resumed after an
interruption, it must be restarted from the beginning if interrupted.

Consequences/Why not:
It is possible that after the interruption, a cons-pair may be created the
references two values that were previously allocated. It is possible that before
the interruption these two values were to be destroyed, but after the interrup
